// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user_catalog {
  userId       Int            @id @default(autoincrement())
  personId     Int            @unique
  roleId       Int?
  username     String         @unique @db.VarChar(32)
  email        String         @unique @db.VarChar(64)
  password     String         @db.VarChar(64)
  code         String?        @db.VarChar(8)
  status       String         @default("active") @db.VarChar(16)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  person       person_catalog @relation(fields: [personId], references: [personId])
  role         role_catalog?  @relation(fields: [roleId], references: [roleId])
  user_session user_session[]
}

model person_catalog {
  personId       Int               @id @default(autoincrement())
  firstName      String            @db.VarChar(16)
  middleName     String?           @db.VarChar(16)
  lastName       String            @db.VarChar(16)
  secondLastName String            @db.VarChar(16)
  curp           String            @unique @db.VarChar(18)
  cellphone      String            @db.VarChar(10)
  gender         String            @db.VarChar(1)
  birthdate      DateTime          @db.Date
  status         String            @default("active") @db.VarChar(16)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  user           user_catalog?
  address        address_catalog[]
}

model address_catalog {
  addressId Int            @id @default(autoincrement())
  personId  Int
  street    String         @db.VarChar(64)
  number    String         @db.VarChar(8)
  suburb    String         @db.VarChar(32)
  city      String         @db.VarChar(32)
  state     String         @db.VarChar(32)
  country   String         @db.VarChar(32)
  zipCode   String         @db.VarChar(8)
  status    String         @db.VarChar(16)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  person    person_catalog @relation(fields: [personId], references: [personId])
}

model user_session {
  sessionId Int          @id @default(autoincrement())
  userId    Int
  token     String       @unique @db.VarChar(192)
  device    String       @db.VarChar(128)
  ip        String       @db.VarChar(16)
  status    String       @db.VarChar(16)
  createdAt DateTime     @default(now())
  expiresAt DateTime     @db.Timestamp
  user      user_catalog @relation(fields: [userId], references: [userId])
}

model role_catalog {
  roleId     Int                         @id @default(autoincrement())
  roleName   String                      @unique @db.VarChar(32)
  status     String                      @default("active") @db.VarChar(16)
  createdAt  DateTime                    @default(now())
  updatedAt  DateTime                    @updatedAt
  user       user_catalog[]
  permission permission_administration[]
}

model permission_administration {
  permissionId Int             @id @default(autoincrement())
  roleId       Int
  sectionId    Int
  status       String          @default("active") @db.VarChar(16)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  role         role_catalog    @relation(fields: [roleId], references: [roleId])
  section      section_catalog @relation(fields: [sectionId], references: [sectionId])
}

model menu_catalog {
  menuId    Int               @id @default(autoincrement())
  menuName  String            @db.VarChar(32)
  status    String            @default("active") @db.VarChar(16)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  section   section_catalog[]
}

model section_catalog {
  sectionId   Int                         @id @default(autoincrement())
  menuId      Int
  sectionName String                      @db.VarChar(32)
  url         String                      @db.VarChar(512)
  status      String                      @default("active") @db.VarChar(16)
  createdAt   DateTime                    @default(now())
  updatedAt   DateTime                    @updatedAt
  menu        menu_catalog                @relation(fields: [menuId], references: [menuId])
  permission  permission_administration[]
}
